orchestrator:
  log_dir: "./logs"
  default_device: "cuda:0"

pipelines:
  # - name: detect_deeplabcut
  #   steps:
  #     # - command: detect
  #     #   config_file: "dataset_files/MoVi/MoVi_test.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/MoVi/MoVi_test.yaml"

  # - name: detect_RTMW
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/rtmw_detector.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  

  # - name: extended_kalman_filter_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_with_ekf.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  - name: test_noise_20
    steps:
      - command: noise
        config_file: "config_yamls\test_noise_20.yaml"

  - name: test_noise_30
    steps:
      - command: noise
        config_file: "config_yamls\test_noise_30.yaml"

  - name: test_noise_40
    steps:
      - command: noise
        config_file: "config_yamls\test_noise_40.yaml"

  - name: test_noise_50
    steps:
      - command: noise
        config_file: "config_yamls\test_noise_50.yaml"

  - name: test_noise_60
    steps:
      - command: noise
        config_file: "config_yamls\test_noise_60.yaml"

  # - name: unscented_kalman_filter_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_with_ukf.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  # - name: butterworth_4th_order_8hz_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_butterworth_4th_8hz.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  # - name: fdf_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_fdf.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  # - name: butterworth_2nd_order_1hz_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_butterworth_2nd_1hz.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"

  # - name: gvcspl_filter_pipeline
  #   steps:
  #     - command: detect
  #       config_file: "config_yamls/detect_and_filter.yaml"
  #     - command: noise
  #       config_file: "config_yamls/pipeline_config.yaml"
  #     - command: filter
  #       config_file: "config_yamls/filter_gvcspl.yaml"
  #     - command: evaluation
  #       config_file: "dataset_files/HumanEva/humaneva_config.yaml"
